/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: BCBSA üè• üîµ
 * Environment: Production
 * Id: 9da2775f-eede-00c1-d7ce-96bf2cae2fed
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TaxonomyCodenames } from '../system/taxonomies.generated.js';
           
            /*
* Type representing codename of 'Medical Specialties' taxonomy
*/
            export type MedicalSpecialtiesTaxonomyCodename = keyof Pick<Record<TaxonomyCodenames, null>, "medical_specialties">;

            /*
* Typeguard for codename of 'Medical Specialties' taxonomy
*/
            export function isMedicalSpecialtiesTaxonomyCodename(value: string | undefined | null): value is MedicalSpecialtiesTaxonomyCodename {
                return typeof value === 'string' && value === ('medical_specialties' satisfies MedicalSpecialtiesTaxonomyCodename);
            }

            /*
* Array of all taxonomy term codenames
*/
            export const medicalSpecialtiesTaxonomyTermCodenames = ['clinical_research', 'cardiology', 'dermatology', 'endocrinology', 'experimental_medicine', 'immunology', 'infectious_diseases', 'neurodegenerative_disorders', 'neurology', 'oncology', 'orthopedics', 'pediatrics'] as const;;
           
            /*
* Type representing all taxonomy term codenames
*/
            export type MedicalSpecialtiesTaxonomyTermCodenames = typeof medicalSpecialtiesTaxonomyTermCodenames[number];;

            /*
* Typeguard for taxonomy term codename
*/
            export function isMedicalSpecialtiesTaxonomyTermCodename(value: string | undefined | null): value is MedicalSpecialtiesTaxonomyTermCodenames {
                return typeof value === 'string' && (medicalSpecialtiesTaxonomyTermCodenames as readonly string[]).includes(value);
            };
            
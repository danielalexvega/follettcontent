/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Follett Content
 * Environment: Production
 * Id: 0537e98b-379f-0050-5134-9e8d9c775098
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TaxonomyCodenames } from '../system/taxonomies.generated.js';
           
            /*
* Type representing codename of 'Event Topic' taxonomy
*/
            export type EventTopicTaxonomyCodename = keyof Pick<Record<TaxonomyCodenames, null>, "event_topic">;

            /*
* Typeguard for codename of 'Event Topic' taxonomy
*/
            export function isEventTopicTaxonomyCodename(value: string | undefined | null): value is EventTopicTaxonomyCodename {
                return typeof value === 'string' && value === ('event_topic' satisfies EventTopicTaxonomyCodename);
            }

            /*
* Array of all taxonomy term codenames
*/
            export const eventTopicTaxonomyTermCodenames = ['nutrition', 'physical_fitness', 'preventative_care'] as const;;
           
            /*
* Type representing all taxonomy term codenames
*/
            export type EventTopicTaxonomyTermCodenames = typeof eventTopicTaxonomyTermCodenames[number];;

            /*
* Typeguard for taxonomy term codename
*/
            export function isEventTopicTaxonomyTermCodename(value: string | undefined | null): value is EventTopicTaxonomyTermCodenames {
                return typeof value === 'string' && (eventTopicTaxonomyTermCodenames as readonly string[]).includes(value);
            };
            
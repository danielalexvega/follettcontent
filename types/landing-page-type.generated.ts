/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: BCBSA üè• üîµ
 * Environment: Production
 * Id: 9da2775f-eede-00c1-d7ce-96bf2cae2fed
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { ArticleType } from '../types/article-type.generated.js';
import type { CallToActionType } from '../types/call-to-action-type.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { DisclaimerType } from '../types/disclaimer-type.generated.js';
import type { EventType } from '../types/event-type.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { PageType } from '../types/page-type.generated.js';
import type { VideoType } from '../types/video-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Landing Page' type
*/
            export type LandingPageTypeCodename = keyof Pick<Record<TypeCodenames, null>, "landing_page">;

            /*
* Typeguard for codename of 'Landing Page' type
*/
            export function isLandingPageTypeCodename(value: string | undefined | null): value is LandingPageTypeCodename {
                return typeof value === 'string' && value === ('landing_page' satisfies LandingPageTypeCodename);
            }

/*
    * Landing Page
    *
    * Id: cc5060fc-1b09-40b6-a07f-5eb885301747
* Codename: landing_page
    */
export type LandingPageType = IContentItem<
{
/*
    * Headline
    *
    * Codename: headline
* Id: 19b37bc8-cd8a-43a2-a647-61732524abed
* Type: text
* Required: true
    */
                readonly headline: Elements.TextElement;

/*
    * Subheadline
    *
    * Codename: subheadline
* Id: 1f3be25d-1bcf-4e59-9003-14490f82f338
* Type: text
* Required: true
    */
                readonly subheadline: Elements.TextElement;

/*
    * Button Label
    *
    * Codename: button_text
* Id: 9da3b6b5-2b46-4a14-8941-3d93a732a528
* Type: text
* Required: false
    */
                readonly button_text: Elements.TextElement;

/*
    * Button Link
    *
    * Codename: button_label
* Id: 8cf20a29-26d3-487b-babf-6cf1344ade9d
* Type: modular_content
* Required: false
* Allowed content types: page
    */
                readonly button_label: Elements.LinkedItemsElement<PageType>;

/*
    * Hero Image
    *
    * Codename: hero_image
* Id: 5030bc21-47d3-451f-b5e7-d59d8d7a2439
* Type: asset
* Required: true
    */
                readonly hero_image: Elements.AssetsElement;

/*
    * Body Copy
    *
    * Codename: body_copy
* Id: 7b9826ff-5cb0-450f-b16a-bd176aed04cf
* Type: rich_text
* Required: false
* Allowed content types: video, disclaimer, call_to_action
    */
                readonly body_copy: Elements.RichTextElement<VideoType | DisclaimerType | CallToActionType>;

/*
    * Featured Content
    *
    * Codename: featured_content
* Id: 38cf004b-3054-43ff-9b7a-f0734b1d35f1
* Type: modular_content
* Required: false
* Allowed content types: event, article, call_to_action
    */
                readonly featured_content: Elements.LinkedItemsElement<EventType | ArticleType | CallToActionType>;

/*
    * Subpages
    *
    * Codename: subpages
* Id: 9d5080db-f2bb-41a1-bcbe-11786ee3a59d
* Type: subpages
* Required: false
* Allowed content types: page
    */
                readonly subpages: Elements.LinkedItemsElement<PageType>;}, 
LandingPageTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Landing Page
*/
export type LandingPageTypeElementCodenames = 'headline' | 'subheadline' | 'button_text' | 'button_label' | 'hero_image' | 'body_copy' | 'featured_content' | 'subpages';;

/*
    * Type guard for Landing Page
    *
    * Id: cc5060fc-1b09-40b6-a07f-5eb885301747
* Codename: landing_page
    */
export function isLandingPageType(item: IContentItem | undefined | null): item is LandingPageType {
                return item?.system.type === ('landing_page' satisfies LandingPageTypeCodename);
            };



            
/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Follett Content
 * Environment: Production
 * Id: 0537e98b-379f-0050-5134-9e8d9c775098
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { AudienceTaxonomyTermCodenames, AudienceTaxonomyCodename } from '../taxonomies/audience-taxonomy.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { MetadataSnippet } from '../snippets/metadata-snippet.generated.js';
import type { OfferingsTaxonomyTermCodenames, OfferingsTaxonomyCodename } from '../taxonomies/offerings-taxonomy.generated.js';
import type { TopicTaxonomyTermCodenames, TopicTaxonomyCodename } from '../taxonomies/topic-taxonomy.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'Blog Post' type
*/
            export type BlogPostTypeCodename = keyof Pick<Record<TypeCodenames, null>, "blog_post">;

            /*
* Typeguard for codename of 'Blog Post' type
*/
            export function isBlogPostTypeCodename(value: string | undefined | null): value is BlogPostTypeCodename {
                return typeof value === 'string' && value === ('blog_post' satisfies BlogPostTypeCodename);
            }

/*
    * Blog Post
    *
    * Id: 336302c0-0634-4974-b33b-8c7b0469e837
* Codename: blog_post
    */
export type BlogPostType = IContentItem<
{
/*
    * Title
    *
    * Codename: title
* Id: 72869e6e-2822-4e81-944a-d90b3148ce4a
* Type: text
* Required: true
    */
                readonly title: Elements.TextElement;

/*
    * Image
    *
    * Codename: image
* Id: 1361b589-f40e-4c4a-b219-62a0f3f5a8c0
* Type: asset
* Required: true
    */
                readonly image: Elements.AssetsElement;

/*
    * Body
    *
    * Codename: body
* Id: e74bc043-0613-4554-8fb5-4d03a42c61a5
* Type: rich_text
* Required: true
    */
                readonly body: Elements.RichTextElement<CoreType>;

/*
    * Offerings
    *
    * Codename: offerings
* Id: 11ec753e-3b16-4407-bca5-f93d60650aca
* Type: taxonomy
* Required: false
* Taxonomy: offerings
    */
                readonly offerings: Elements.TaxonomyElement<OfferingsTaxonomyTermCodenames, OfferingsTaxonomyCodename>;

/*
    * Topic
    *
    * Codename: topic
* Id: 20014062-2dd5-4d2b-924d-d85b3b7e76da
* Type: taxonomy
* Required: false
* Taxonomy: topic
    */
                readonly topic: Elements.TaxonomyElement<TopicTaxonomyTermCodenames, TopicTaxonomyCodename>;

/*
    * Audience
    *
    * Codename: audience
* Id: e32a5bbb-bee7-41b9-9948-733d04f58590
* Type: taxonomy
* Required: false
* Taxonomy: audience
    */
                readonly audience: Elements.TaxonomyElement<AudienceTaxonomyTermCodenames, AudienceTaxonomyCodename>;

/*
    * URL slug
    *
    * Codename: url_slug
* Id: cfdddb6d-ae75-431b-ac02-af463468d86b
* Type: url_slug
* Required: true
    */
                readonly url_slug: Elements.UrlSlugElement;} & MetadataSnippet, 
BlogPostTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for Blog Post
*/
export type BlogPostTypeElementCodenames = 'title' | 'image' | 'body' | 'offerings' | 'topic' | 'audience' | 'metadata__title' | 'metadata__keywords' | 'metadata__description' | 'url_slug';;

/*
    * Type guard for Blog Post
    *
    * Id: 336302c0-0634-4974-b33b-8c7b0469e837
* Codename: blog_post
    */
export function isBlogPostType(item: IContentItem | undefined | null): item is BlogPostType {
                return item?.system.type === ('blog_post' satisfies BlogPostTypeCodename);
            };



            
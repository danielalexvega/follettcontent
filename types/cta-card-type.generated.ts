/*
 * This file has been auto-generated by '@kontent-ai/sync-sdk@9.1.0'.
 * 
 * (c) Kontent.ai
 *  
 * -------------------------------------------------------------------------------
 * 
 * Project: Follett Content
 * Environment: Production
 * Id: 0537e98b-379f-0050-5134-9e8d9c775098
 * 
 * -------------------------------------------------------------------------------
 */


            import type { TypeCodenames } from '../system/types.generated.js';
import type { Elements, IContentItem } from '@kontent-ai/delivery-sdk';
import type { AudienceSnippet } from '../snippets/audience-snippet.generated.js';
import type { CollectionCodenames } from '../system/collections.generated.js';
import type { CoreType } from '../system/types.generated.js';
import type { LanguageCodenames } from '../system/languages.generated.js';
import type { PageType } from '../types/page-type.generated.js';
import type { WorkflowCodenames, WorkflowStepCodenames } from '../system/workflows.generated.js';
           
            /*
* Type representing codename of 'CTA Card' type
*/
            export type CTACardTypeCodename = keyof Pick<Record<TypeCodenames, null>, "cta_card">;

            /*
* Typeguard for codename of 'CTA Card' type
*/
            export function isCTACardTypeCodename(value: string | undefined | null): value is CTACardTypeCodename {
                return typeof value === 'string' && value === ('cta_card' satisfies CTACardTypeCodename);
            }

/*
    * CTA Card
    *
    * Id: 2f9a71b6-7333-4b08-b04f-bbfbc696c6a1
* Codename: cta_card
    */
export type CTACardType = IContentItem<
{
/*
    * Title
    *
    * Codename: title
* Id: bda3272b-190f-4de9-a8ed-aee5125bc477
* Type: text
* Required: false
    */
                readonly title: Elements.TextElement;

/*
    * Body
    *
    * Codename: body
* Id: b0729668-70cf-49eb-aae3-e5577a087186
* Type: rich_text
* Required: false
    */
                readonly body: Elements.RichTextElement<CoreType>;

/*
    * Link Text
    *
    * Codename: link_text
* Id: 8bab058e-0f66-48e9-a8ef-47d19eb44401
* Type: text
* Required: false
    */
                readonly link_text: Elements.TextElement;

/*
    * Page Link
    *
    * Codename: page_link
* Id: 1a7298d0-a54e-43b8-acf0-5fc9993e7058
* Type: modular_content
* Required: false
* Allowed content types: page
    */
                readonly page_link: Elements.LinkedItemsElement<PageType>;

/*
    * Outside URL
    *
    * Codename: outside_url
* Id: 7c8378ab-8a7f-4911-8468-9afb484b72d7
* Type: text
* Required: false
* Guidelines: Use if you are not linking to an internal page
    */
                readonly outside_url: Elements.TextElement;} & AudienceSnippet, 
CTACardTypeCodename, LanguageCodenames, CollectionCodenames, WorkflowCodenames, WorkflowStepCodenames>

/*
* Type representing all available element codenames for CTA Card
*/
export type CTACardTypeElementCodenames = 'title' | 'body' | 'link_text' | 'page_link' | 'outside_url' | 'audience__audience' | 'audience__offerings';;

/*
    * Type guard for CTA Card
    *
    * Id: 2f9a71b6-7333-4b08-b04f-bbfbc696c6a1
* Codename: cta_card
    */
export function isCTACardType(item: IContentItem | undefined | null): item is CTACardType {
                return item?.system.type === ('cta_card' satisfies CTACardTypeCodename);
            };



            